HeaderFilterRegex: "include/num_collect/|test/"
Checks: >
  clang-diagnostic-*,
    -clang-diagnostic-unknown-pragmas,
  clang-analyzer-*,
    -clang-analyzer-core.UndefinedBinaryOperatorResult,
    -clang-analyzer-optin.performance.Padding,
  cppcoreguidelines-*,
    -cppcoreguidelines-owning-memory,
    -cppcoreguidelines-pro-bounds-constant-array-index,
    -cppcoreguidelines-avoid-non-const-global-variables,
    -cppcoreguidelines-avoid-const-or-ref-data-members,
    -cppcoreguidelines-missing-std-forward,
    -cppcoreguidelines-avoid-do-while,
  google-*,
    -google-runtime-references,
    -google-readability-todo,
  performance-*,
  portability-*,
    -portability-template-virtual-member-function,
  readability-*,
    readability-identifier-naming,
    -readability-identifier-length,
    -readability-function-cognitive-complexity,
    -readability-suspicious-call-argument,
    -readability-avoid-unconditional-preprocessor-if,
    -readability-redundant-member-init,
    -readability-math-missing-parentheses,
  modernize-*,
    -modernize-pass-by-value,
    -modernize-return-braced-init-list,
    -modernize-concat-nested-namespaces,
    -modernize-use-std-numbers,
    -modernize-use-constraints,
    -modernize-use-ranges,
    -modernize-use-auto,
    -modernize-use-integer-sign-comparison,
  hicpp-*,
    -hicpp-use-auto,
  cert-*,
    -cert-err58-cpp,
  bugprone-*,
    -bugprone-easily-swappable-parameters,
    -bugprone-exception-escape,
    -bugprone-unchecked-optional-access,
    -bugprone-chained-comparison,
    -bugprone-optional-value-conversion,
    -bugprone-crtp-constructor-accessibility,
  concurrency-*,
  -boost-*,
  openmp-*,
    -openmp-use-default-none,

# Ignored checks:
#
# - google-runtime-references is a Google-specific rule, and forces use of raw pointers.
# - modernize-pass-by-value causes some programs to crash when applied to Eigen's objects
#   (https://eigen.tuxfamily.org/dox/group__TopicPassingByValue.html).
# - clang-analyzer-core.UndefinedBinaryOperatorResult cause warnings for Eigen.
# - clang-analyzer-optin.performance.Padding is hard to be fixed.
# - readability-function-cognitive-complexity is hard to be fixed in tests.
# - cppcoreguidelines-owning-memory forces to use an external library.
# - cppcoreguidelines-pro-bounds-constant-array-index forces to use an external library.
# - bugprone-easily-swappable-parameters, readability-suspicious-call-argument is difficult to fix.
# - cert-err58-cpp produces warnings in all tests due to Catch2 library.
# - cppcoreguidelines-avoid-non-const-global-variables produces warnings in all tests due to Catch2 library.
# - readability-identifier-length prevent traditional codes.
# - openmp-use-default-none cannot be fixed when class members are used as usual in object-oriented programming.
# - bugprone-exception-escape has a bug.
# - bugprone-unchecked-optional-access complains even when std::optional::value function is used and has a bug as in https://github.com/clangd/clangd/issues/1700.
# - cppcoreguidelines-avoid-const-or-ref-data-members prevents expression templates.
# - readability-avoid-unconditional-preprocessor-if generates warnings to automatically generated files which cannot be fixed.
# - cppcoreguidelines-missing-std-forward cannot be fixed sometimes.
# - modernize-concat-nested-namespaces, modernize-use-constraints will be fixed later.
# - clang-diagnostic-unknown-pragmas generates false positives for "#pragma omp" even with flags for OpenMP.
# - bugprone-chained-comparison prevents use of my assertion macro.
# - readability-redundant-member-init generates too many warnings in existing codes.
# - modernize-use-std-numbers generates many false positives.
# - bugprone-optional-value-conversion has a bug to generate warnings even when checks of existence of values exist.
# - cppcoreguidelines-avoid-do-while has a bug to ignore NOLINT.
# - readability-math-missing-parentheses generates too many warnings in existing codes.
# - bugprone-crtp-constructor-accessibility generates too many warnings in existing codes.
# - modernize-use-ranges generates too many warnings in existing codes.
# - hicpp-use-auto, modernize-use-auto should not be fixed in source codes using Eigen library.

CheckOptions:
  # Naming Conventions
  # for these parameters of the naming convention,
  # see https://clang.llvm.org/extra/clang-tidy/checks/readability/identifier-naming.html
  - key: readability-identifier-naming.NamespaceCase
    value: lower_case

  - key: readability-identifier-naming.ClassCase
    value: lower_case
  - key: readability-identifier-naming.StructCase
    value: lower_case
  - key: readability-identifier-naming.EnumCase
    value: lower_case

  - key: readability-identifier-naming.FunctionCase
    value: lower_case

  - key: readability-identifier-naming.VariableCase
    value: lower_case
  - key: readability-identifier-naming.ConstantCase
    value: lower_case
  - key: readability-identifier-naming.ParameterCase
    value: lower_case
  - key: readability-identifier-naming.EnumConstantCase
    value: lower_case
  - key: readability-identifier-naming.MemberCase
    value: lower_case
  - key: readability-identifier-naming.PrivateMemberSuffix
    value: _
  - key: readability-identifier-naming.ProtectedMemberSuffix
    value: _

  - key: readability-identifier-naming.TypeTemplateParameterCase
    value: CamelCase
  - key: readability-identifier-naming.ValueTemplateParameterCase
    value: CamelCase

  - key: readability-identifier-naming.ConceptCase
    value: lower_case

  - key: readability-identifier-naming.MacroDefinitionCase
    value: UPPER_CASE

  # Workaround of https://github.com/llvm/llvm-project/issues/46097.
  - key: readability-identifier-naming.TypeTemplateParameterIgnoredRegexp
    value: expr-type
